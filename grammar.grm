<decl> ::=
    | tok_word.(func) tok_name '(' <expr> ')' '{' ... '}'

<stmt> ::=
    | tok_name '=' <expr>
    | tok_word.(return) <expr>
    | tok_word.(break)
    | '{' ... '}'

<expr> ::=
    | ';' -> expr.(end)
    | tok_name
    | tok_number
    | <expr> <bin_op> <expr>
    | <unary_op> <expr>
    | tok_name '(' <expr> ')'
    | <expr> ',' <expr>
    | tok_word.(func) '(' <expr> ')' -> '{' ... '}'

<bin_op> ::=
    | *
    | /
    | *=
    | /=
    | +
    | -
    | +=
    | -=
    | =
    | ==
    | !=
    | <
    | <=
    | >
    | >=

<unary_op> ::=
    | +
    | -
    | !
    | +-

<operator> ::=
    | ;
    | (
    | )
    | {
    | }
    | [
    | ]